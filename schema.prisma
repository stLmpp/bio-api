datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Platform {
  id           String   @id @db.VarChar(10)
  name         String   @unique @db.VarChar(100)
  creationDate DateTime @default(now()) @map("creation_date")

  platformGameMiniGame PlatformGameMiniGame[]
  platformInputType    PlatformInputType[]

  @@map("platform")
}

model Game {
  id           String   @id @db.VarChar(10)
  name         String   @unique @db.VarChar(100)
  creationDate DateTime @default(now()) @map("creation_date")

  gameMiniGame GameMiniGame[]

  @@map("game")
}

model MiniGame {
  id           Int      @id @default(autoincrement())
  name         String   @unique @db.VarChar(100)
  creationDate DateTime @default(now()) @map("creation_date")

  gameMiniGame GameMiniGame[]

  @@map("mini_game")
}

model InputType {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(100)
  creationDate DateTime @default(now()) @map("creation_date")

  platformInputType PlatformInputType[]
  player            Player[]

  @@map("input_type")
}

model Mode {
  id             String   @id @db.VarChar(50)
  playerQuantity Int      @map("player_quantity") @db.SmallInt()
  creationDate   DateTime @default(now()) @map("creation_date")

  platformGameMiniGameMode PlatformGameMiniGameMode[]

  @@map("mode")
}

model Stage {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(100)
  shortName    String   @map("short_name") @db.VarChar(20)
  creationDate DateTime @default(now()) @map("creation_date")

  platformGameMiniGameModeStage PlatformGameMiniGameModeStage[]

  @@map("stage")
}

model Character {
  id           String   @id @db.VarChar(100)
  creationDate DateTime @default(now()) @map("creation_date")

  characterCostume CharacterCostume[]

  @@map("character")
}

model CharacterCostume {
  id           Int      @id @default(autoincrement())
  name         String   @unique @db.VarChar(100)
  shortName    String   @map("short_name") @db.VarChar(20)
  characterId  String   @map("character_id") @db.VarChar(100)
  creationDate DateTime @default(now()) @map("creation_date")

  character Character @relation(fields: [characterId], references: [id])

  platformGameMiniGameModeCharacterCostume PlatformGameMiniGameModeCharacterCostume[]

  @@map("character_costume")
}

model GameMiniGame {
  id           Int      @id @default(autoincrement())
  gameId       String   @map("game_id") @db.VarChar(10)
  miniGameId   Int      @map("mini_game_id")
  creationDate DateTime @default(now()) @map("creation_date")

  game     Game     @relation(fields: [gameId], references: [id])
  miniGame MiniGame @relation(fields: [miniGameId], references: [id])

  platformGameMiniGame PlatformGameMiniGame[]

  @@unique([miniGameId, gameId])
  @@map("game_mini_game")
}

model PlatformGameMiniGame {
  id             Int      @id @default(autoincrement())
  gameMiniGameId Int      @map("game_mini_game_id")
  platformId     String   @map("platform_id") @db.VarChar(10)
  creationDate   DateTime @default(now()) @map("creation_date")

  platform     Platform     @relation(fields: [platformId], references: [id])
  gameMiniGame GameMiniGame @relation(fields: [gameMiniGameId], references: [id])

  platformGameMiniGameMode PlatformGameMiniGameMode[]

  @@unique([gameMiniGameId, platformId])
  @@map("platform_game_mini_game")
}

model PlatformGameMiniGameMode {
  id                     Int      @id @default(autoincrement())
  platformGameMiniGameId Int      @map("platform_game_mini_game_id")
  modeId                 String   @map("mode_id") @db.VarChar(100)
  creationDate           DateTime @default(now()) @map("creation_date")

  mode                 Mode                 @relation(fields: [modeId], references: [id])
  platformGameMiniGame PlatformGameMiniGame @relation(fields: [platformGameMiniGameId], references: [id])

  platformGameMiniGameModeCharacterCostume PlatformGameMiniGameModeCharacterCostume[]
  platformGameMiniGameModeStage            PlatformGameMiniGameModeStage[]

  @@unique([platformGameMiniGameId, modeId])
  @@map("platform_game_mini_game_mode")
}

model PlatformGameMiniGameModeCharacterCostume {
  id                         Int      @id @default(autoincrement())
  platformGameMiniGameModeId Int      @map("platform_game_mini_game_mode_id")
  characterCostumeId         Int      @map("character_costume_id")
  creationDate               DateTime @default(now()) @map("creation_date")

  characterCostume         CharacterCostume         @relation(fields: [characterCostumeId], references: [id])
  platformGameMiniGameMode PlatformGameMiniGameMode @relation(fields: [platformGameMiniGameModeId], references: [id])

  scorePlayer ScorePlayer[]

  @@unique([platformGameMiniGameModeId, characterCostumeId])
  @@map("platform_game_mini_game_mode_character_costume")
}

model PlatformGameMiniGameModeStage {
  id                         Int      @id @default(autoincrement())
  platformGameMiniGameModeId Int      @map("platform_game_mini_game_mode_id")
  stageId                    Int      @map("stage_id")
  creationDate               DateTime @default(now()) @map("creation_date")

  platformGameMiniGameMode PlatformGameMiniGameMode @relation(fields: [platformGameMiniGameModeId], references: [id])
  stage                    Stage                    @relation(fields: [stageId], references: [id])

  score Score[]

  @@unique([platformGameMiniGameModeId, stageId])
  @@map("platform_game_mini_game_mode_stage")
}

model PlatformInputType {
  id           Int      @id @default(autoincrement())
  platformId   String   @map("platform_id") @db.VarChar(10)
  inputTypeId  Int      @map("input_type_id")
  creationDate DateTime @default(now()) @map("creation_date")

  platform  Platform  @relation(fields: [platformId], references: [id])
  inputType InputType @relation(fields: [inputTypeId], references: [id])

  scorePlayer ScorePlayer[]

  @@unique([platformId, inputTypeId])
  @@map("platform_input_type")
}

model Region {
  id           String   @id @db.VarChar(20)
  name         String   @db.VarChar(100)
  creationDate DateTime @default(now()) @map("creation_date")

  player Player[]

  @@map("region")
}

model Player {
  id           BigInt   @id @default(autoincrement())
  name         String   @unique @db.VarChar(50)
  regionId     String   @map("region_id") @db.VarChar(20)
  creationDate DateTime @default(now()) @map("creation_date")

  preferedInputTypeId Int?    @map("prefered_input_type_id")
  userId              String? @unique @map("user_id") @db.VarChar(36)

  region Region @relation(fields: [regionId], references: [id])

  preferedInputType InputType? @relation(fields: [preferedInputTypeId], references: [id])
  user              User?      @relation(fields: [userId], references: [id])

  score       Score[]
  scorePlayer ScorePlayer[]

  @@map("player")
}

model Score {
  id                              BigInt   @id @default(autoincrement())
  platformGameMiniGameModeStageId Int      @map("platform_game_mini_game_mode_stage_id")
  createdByPlayerId               BigInt   @map("created_by_player_id")
  score                           Float
  creationDate                    DateTime @default(now()) @map("creation_date")

  maxCombo     Int?      @map("max_combo") @db.SmallInt()
  time         String?   @db.VarChar(8)
  achievedDate DateTime? @map("achieved_date")

  platformGameMiniGameModeStage PlatformGameMiniGameModeStage @relation(fields: [platformGameMiniGameModeStageId], references: [id])
  createdByPlayer               Player                        @relation(fields: [createdByPlayerId], references: [id])

  scorePlayer ScorePlayer[]

  @@map("score")
}

model ScorePlayer {
  id                                         BigInt   @id @default(autoincrement())
  scoreId                                    BigInt   @map("score_id")
  playerId                                   BigInt   @map("player_id")
  platformGameMiniGameModeCharacterCostumeId Int      @map("platform_game_mini_game_mode_character_costume_id")
  host                                       Boolean
  creationDate                               DateTime @default(now()) @map("creation_date")

  bulletKills         Int?    @map("bullet_kills") @db.SmallInt()
  description         String? @db.VarChar(500)
  platformInputTypeId Int?    @map("platform_input_type_id")

  score                                    Score                                    @relation(fields: [scoreId], references: [id])
  player                                   Player                                   @relation(fields: [playerId], references: [id])
  platformGameMiniGameModeCharacterCostume PlatformGameMiniGameModeCharacterCostume @relation(fields: [platformGameMiniGameModeCharacterCostumeId], references: [id])

  platformInputType PlatformInputType? @relation(fields: [platformInputTypeId], references: [id])

  scoreWorldRecord ScoreWorldRecord[]

  @@map("score_player")
}

model ScoreWorldRecord {
  id            BigInt               @id @default(autoincrement())
  scorePlayerId BigInt               @map("score_player_id")
  creationDate  DateTime             @default(now()) @map("creation_date")
  type          ScoreWorldRecordType

  endDate DateTime? @map("end_date")

  scorePlayer ScorePlayer @relation(fields: [scorePlayerId], references: [id])

  @@map("score_world_record")
}

model User {
  id    String @id @db.VarChar(36)
  name  String @unique @db.VarChar(50)
  email String @unique @db.VarChar(254)

  player Player?

  @@map("user")
}

enum ScoreWorldRecordType {
  WordRecord
  CharacterWorldRecord

  @@map("score_world_record_type")
}
